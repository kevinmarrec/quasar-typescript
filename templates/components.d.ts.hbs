// Type definitions for {{name}}

import { VueConstructor } from 'vue';

export default {{name}};
export const {{name}}: {{name}}Constructor;

{{#if props}}
export interface {{name}}Props {
{{#each props}}
  {{@key}}: {{this}}
{{/each}}
}
{{/if}}

{{#if mixins}}
export interface {{name}}Mixins {
{{#each mixins}}
    {{@key}}: {{this}}
{{/each}}
}
{{/if}}

{{#if data}}
export interface {{name}}Data {
{{#each data}}
  {{@key}}: {{this}}
{{/each}}
}
{{/if}}

{{#if watch}}
export interface {{name}}Watch {
{{#each props}}
  {{@key}}: {{this}}
{{/each}}
}
{{/if}}

{{#if methods}}
export interface {{name}}Methods {
{{#each methods}}
  {{@key}}: {{this}}
{{/each}}
}
{{/if}}

{{#if computed}}
export interface {{name}}Computed {
{{#each computed}}
  {{@key}}: {{this}}
{{/each}}
}
{{/if}}

export interface {{name}}Constructor extends VueConstructor {
  {{#if props}}
  props: {{name}}Props;
  {{/if}}
  {{#if data}}
  data: () => {{name}}Data;
  {{/if}}
  {{#if watch}}
  watch: {{name}}Watch;
  {{/if}}
  {{#if methods}}
  methods: {{name}}Methods;
  {{/if}}
  {{#if computed}}
  computed: {{name}}Computed;
  {{/if}}
}
